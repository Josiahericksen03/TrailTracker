TODO
-pop ups saying if incorrect password, etc for quality of life
-make it so cameras show longitude and latitude
-instead of showing icon, have picture displayed(in profile??)
-make it so depending if photo has camera id or not, depends how info is parsed
-review all features and make sure nothing stopped working during testing
-sort by date

-make run over https instead of http (need domain name)
-get pin of current location working in online version

PRODUCT:
-figure out paid tier and free tier
-free tier: only photos, pay for full videos

MOBILE:
-react native version, connects to same ndoe backend

AI:
-train ai off of rest of footage
-also look at other ways to effectively train it better
-figure out how to make it work better with other animals
-add more animals to array and training set

-add more security measures
-add requirements for password length, etc
-add email verification

#######################################################################################################################
PROFILE STYLING:
<style>
        body, html {
            height: 100%;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            background: url("{{ url_for('static', filename='background.png') }}") no-repeat center center fixed;
            background-size: cover;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            overflow: hidden; /* Prevent scrolling on body */
        }

        .container {
            background-color: rgba(50, 50, 50, 0.8);
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            width: 90%; /* Ensure a small margin on the sides */
            text-align: center;
            color: white;
            margin-top: 60px; /* Add margin to avoid overlap with the top bar */
            margin-bottom: 60px; /* Add margin to avoid overlap with the bottom bar */
            overflow-y: auto; /* Enable vertical scrolling */
            position: relative;
        }

        .top-bar, .bottom-bar {
            position: fixed;
            left: 0;
            width: 100%;
            height: 50px;
            background-color: #323232;
            display: flex;
            align-items: center;
            justify-content: center; /* Center align the items */
            z-index: 1000;
        }

        .top-bar {
            top: 0;
        }

        .bottom-bar {
            bottom: 0;
        }

        .title {
            color: white;
            font-size: 24px;
            margin: 0;
            text-align: center;
            display: flex;
            justify-content: center; /* Center align the text */
            align-items: center; /* Center vertically */
        }

        .nav-btn {
            background-color: #323232;
            color: white;
            border: none;
            cursor: pointer;
            padding: 10px;
            text-align: center;
            margin: 0 40px; /* Add margin for spacing between buttons */
            border-radius: 50%; /* Make hover shape round */
        }

        .nav-btn:hover {
            background-color: #444;
        }

        .nav-btn img {
            width: 25px;
            height: 25px;
        }

        .profile-pic {
            border-radius: 50%;
            width: 150px;
            height: 150px;
            object-fit: cover;
            display: block;
            margin: 0 auto 10px;
        }

        .upload-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .upload-details {
            flex-grow: 1;
        }

        .upload-item {
            display: flex;
            align-items: center;
            justify-content: flex-start; /* Ensure content starts from the left */
            margin-bottom: 20px;
        }

        .upload-details {
            flex-grow: 1;
            margin-right: 10px; /* Add space between text and icon */
        }

        .animal-icon {
            width: 50px;
            height: 50px;
        }

        .btn-container {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }


        .input, .btn {
            margin-bottom: 15px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            width: 90%; /* Reduce width for a narrower form */
            margin: 0 auto;
            display: block; /* Ensure input and button are block-level and centered */
        }

        .btn {
            background-color: #228B22;
            color: white;
            cursor: pointer;
            border: 2px solid white;
        }

        .btn:hover {
            background-color: #196619;
        }

        .logout-btn {
            padding: 10px 20px;
            border: 2px solid white;
            border-radius: 20px;
            background-color: #444;
            color: white;
            cursor: pointer;
            margin: 20px auto; /* Centered and spaced from the top */
            display: inline-block; /* Ensure button is inline-block and centered */
        }

        .logout-btn:hover {
            background-color: grey;
        }

        a {
            display: block;
            margin-top: 10px;
            color: #007bff;
        }

        a:hover {
            text-decoration: underline;
        }

        .camera-pins, .upload-history {
            background-color: rgba(255, 255, 255, 0.9);
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: left;
            color: black;
            width: calc(100% - 40px);
            margin: 0 auto 20px; /* Ensure sections are centered and have space between them */
            max-height: 300px; /* Fixed height for the box */
            overflow-y: auto; /* Enable scrolling */
        }

        .camera-pins ul, .upload-history ul {
            list-style-type: none;
            padding: 0;
        }

        .camera-pins li, .upload-history li {
            padding: 10px 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .show-more {
            color: #007bff;
            cursor: pointer;
        }

        .show-more:hover {
            text-decoration: underline;
        }

        /* Dropdown styling */
        .dropdown {
            background-color: rgba(50, 50, 50, 0.8);
            color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            width: calc(100% - 40px); /* Ensure dropdown is centered */
            display: none;
            z-index: 1001;
            margin: 10px auto; /* Add margin to separate from buttons */
            text-align: center;
            border: 2px solid white;
        }

        .label {
            display: block;
            margin-bottom: 5px;
            color: white;
            text-align: left; /* Align label text to the left */
            width: calc(100% - 40px);
            margin: 0 auto;
        }

        .spacer {
            height: 10px; /* Add spacing between elements */
        }

        .pin-btn {
            background-color: #444;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            padding: 5px 10px;
            text-align: center;
            margin: 5px;
        }

        .pin-btn:hover {
            background-color: #555;
        }

        .btn-delete {
            background-color: #d9534f;
        }

        .btn-delete:hover {
            background-color: #c9302c;
        }

        .btn-group {
            display: flex;
            gap: 10px; /* Add space between buttons */
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1002;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            background-color: #323232;
            color: white;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 400px;
            border-radius: 8px;
        }

        .modal-content input, .modal-content button {
            color: black;
        }

        .modal-content .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .modal-content .close:hover,
        .modal-content .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .upload-item img {
            width: 50px;
            height: 50px;
        }

        .upload-details span {
            display: block;
            margin-bottom: 5px;
        }

        .upload-actions {
            display: flex;
            align-items: center;
            gap: 10px; /* Add space between buttons */
            margin-left: 10px;
        }

        .round-btn {
            background-color: #444;
            color: white;
            border: none;
            border-radius: 50%;
            padding: 10px;
            text-align: center;
            cursor: pointer;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .round-btn:hover {
            background-color: #555;
        }

        .btn-delete-round {
            background-color: #d9534f;
        }

        .btn-delete-round:hover {
            background-color: #c9302c;
        }
    </style>

    UPLOAD HTML

    <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload</title>
    <style>
        body, html {
            height: 100%;
            margin: 0;
            font-family: Arial, sans-serif;
            background: url("{{ url_for('static', filename='background.png') }}") no-repeat center center fixed;
            background-size: cover;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        .container {
            background-color: rgba(50, 50, 50, 0.8);
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            width: 90%;
            text-align: center;
            color: white;
            margin: 20px;
        }

        .upload-container, .graph-container {
            margin-bottom: 10px;
        }

        .graph-box {
            background-color: rgba(0, 0, 0, 0.6);
            border: 1px solid #444;
            border-radius: 8px;
            padding: 10px;
            width: 94%;
            height: 150px;
        }

        canvas {
            display: block;
            margin: 0 auto;
            max-width: 100%;
            max-height: 100%;
        }

        .top-bar, .bottom-bar {
            position: fixed;
            left: 0;
            width: 100%;
            height: 50px;
            background-color: #323232;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .top-bar {
            top: 0;
        }

        .bottom-bar {
            bottom: 0;
        }

        .title {
            color: white;
            font-size: 24px;
            margin: 0;
            text-align: center;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .nav-btn {
            background-color: #323232;
            color: white;
            border: none;
            cursor: pointer;
            padding: 10px;
            text-align: center;
            margin: 0 40px;
            border-radius: 50%;
        }

        .nav-btn:hover {
            background-color: #444;
        }

        .nav-btn img {
            width: 25px;
            height: 25px;
        }

        .sort-btn {
            background-color: #444;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 10px;
            cursor: pointer;
            margin-bottom: 10px;
        }

        .sort-btn:hover {
            background-color: #555;
        }

        .sort-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 10px;
        }

        .sort-container select {
            margin-left: 10px;
        }

        .btn-success {
            background-color: #228B22;
            color: white;
            border: 2px solid white;
            cursor: pointer;
            padding: 10px 20px;
            border-radius: 4px;
            text-align: center;
            margin-top: 15px;
        }

        .btn-success:hover {
            background-color: #196619;
        }

        .recommendation-box {
            background-color: rgba(50, 50, 50, 0.8);
            border-radius: 8px;
            padding: 20px;
            margin-top: 10px;
            color: white;
            width: 100%;
            box-sizing: border-box;
            white-space: pre-wrap;
        }

        .spinner {
            display: none;
            border: 8px solid #f3f3f3;
            border-top: 8px solid #444;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .drop-zone {
            border: 2px dashed #ddd;
            padding: 30px;
            border-radius: 8px;
            color: #ccc;
            text-align: center;
            margin-top: 20px;
            cursor: pointer;
            transition: border-color 0.2s;
        }
        .drop-zone.dragover {
            border-color: #007bff;
            color: #007bff;
        }

    </style>
</head>
<body>
    <div class="top-bar">
        <div class="title">Trail Tracker</div>
    </div>

    <div class="container upload-container">
        <h2>Upload Videos/Images</h2>
        <form id="uploadForm" action="{{ url_for('upload') }}" method="post" enctype="multipart/form-data">
            {{ form.hidden_tag() }}

            <div class="drop-zone" id="dropZone">
                <p>Drag and drop files here or click to select files</p>
                <input type="file" id="fileInput" name="files" multiple style="display: none;">
            </div>

            <div id="fileList" style="margin-top: 10px;"></div> <!-- List of selected files -->

            <button type="submit" class="btn-success" style="margin-top: 20px;">Upload Selected Files</button>
        </form>
        <div class="spinner" id="spinner"></div>
    </div>

    <div class="container graph-container">
        <h2>Your Trail Cam Data</h2>
        <div class="sort-container">
            <label for="sortBy">Sort by:</label>
            <select class="sort-btn" id="sortBy">
                <option value="" disabled selected>Select</option>
                <option value="camera">Camera</option>
                <option value="animal">Animal</option>
            </select>
            <select class="sort-btn" id="animalOptions" style="display: none;">
                <option value="" disabled selected>Select Animal</option>
                <option value="Bear">Bear</option>
                <option value="Boar">Boar</option>
                <option value="Deer">Deer</option>
                <option value="Bobcat">Bobcat</option>
                <option value="Turkey">Turkey</option>
                <option value="Unidentified">Unidentified</option>
            </select>
            <select class="sort-btn" id="cameraOptions" style="display: none;">
                <option value="" disabled selected>Select Camera</option>
            </select>
        </div>
        <div class="graph-box">
            <canvas id="myChart"></canvas>
        </div>

    </div>

    <div class="bottom-bar">
        <button class="nav-btn" onclick="location.href='/home'">
            <img src="{{ url_for('static', filename='map.png') }}" alt="Map">
        </button>
        <button class="nav-btn" onclick="location.href='/upload'">
            <img src="{{ url_for('static', filename='tree.png') }}" alt="Assistant">
        </button>
        <button class="nav-btn" onclick="location.href='/profile'">
            <img src="{{ url_for('static', filename='profile.png') }}" alt="Profile">
        </button>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const dropZone = document.getElementById('dropZone');
            const fileInput = document.getElementById('fileInput');
            const fileList = document.getElementById('fileList');

            // Handle file input click to open file picker
            dropZone.addEventListener('click', () => fileInput.click());

            // Update file list display when files are selected through the file input
            fileInput.addEventListener('change', () => updateFileList(fileInput.files));

            // Drag-and-drop events
            dropZone.addEventListener('dragover', (e) => {
                e.preventDefault();
                dropZone.classList.add('dragover');
            });

            dropZone.addEventListener('dragleave', () => dropZone.classList.remove('dragover'));

            dropZone.addEventListener('drop', (e) => {
                e.preventDefault();
                dropZone.classList.remove('dragover');

                const files = Array.from(e.dataTransfer.files);
                fileInput.files = new DataTransfer().files;  // Clear existing files
                fileInput.files = files;  // Set new files
                updateFileList(files);
            });

            // Display the list of selected files
            function updateFileList(files) {
                fileList.innerHTML = '';
                Array.from(files).forEach((file, index) => {
                    const fileItem = document.createElement('p');
                    fileItem.textContent = `File ${index + 1}: ${file.name}`;
                    fileList.appendChild(fileItem);
                });
            }

            // Show spinner on form submission
            document.getElementById('uploadForm').addEventListener('submit', function() {
                document.getElementById('spinner').style.display = 'block';
            });
        });
document.addEventListener('DOMContentLoaded', function() {
    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Bear', 'Boar', 'Turkey', 'Deer', 'Bobcat', 'Other'],
            datasets: [{
                label: '# of Sightings',
                data: [0, 0, 0, 0, 0, 0],
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function(value) {
                            if (Number.isInteger(value)) {
                                return value;
                            }
                            return '';
                        },
                        stepSize: 1  // Ensures the y-axis increments by 1
                    }
                }
            },
            plugins: {
                legend: {
                    labels: {
                        color: 'white'
                    }
                }
            }
        }
    });

    function updateGraph(labels, data) {
        myChart.data.labels = labels;
        myChart.data.datasets[0].data = data;
        myChart.update();
    }

    function updateRecommendations(recommendations) {
        const recommendationBox = document.getElementById('recommendationBox');
        if (recommendations.length > 0) {
            recommendationBox.innerHTML = recommendations.join('<br>');
        } else {
            recommendationBox.innerHTML = 'No recommendations available';
        }
    }

    function fetchAndDisplayData(sortBy, filter = null) {
        fetch('/api/users/get_uploads', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                sort_by: sortBy,
                filter_value: filter,
                username: '{{ user.username }}'
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                const labels = data.uploads.map(item => item.label);
                const values = data.uploads.map(item => item.count);
                updateGraph(labels, values);
                updateRecommendations(data.recommendations);
            } else {
                console.error('Error fetching data:', data.message);
            }
        })
        .catch(error => console.error('Error fetching data:', error));
    }

    document.getElementById('sortBy').addEventListener('change', function() {
        var sortBy = this.value;
        var animalOptions = document.getElementById('animalOptions');
        var cameraOptions = document.getElementById('cameraOptions');
        if (sortBy === 'animal') {
            animalOptions.style.display = 'block';
            cameraOptions.style.display = 'none';
        } else if (sortBy === 'camera') {
            cameraOptions.style.display = 'block';
            animalOptions.style.display = 'none';
            fetch(`/api/users/get_camera_ids?username={{ user.username }}`)
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    cameraOptions.innerHTML = '<option value="" disabled selected>Select Camera</option>' +
                        data.camera_ids.map(camera_id => `<option value="${camera_id}">${camera_id}</option>`).join('');
                } else {
                    console.error('Error fetching camera IDs:', data.message);
                }
            })
            .catch(error => console.error('Error fetching camera IDs:', error));
        } else {
            animalOptions.style.display = 'none';
            cameraOptions.style.display = 'none';
        }
    });

    document.getElementById('animalOptions').addEventListener('change', function() {
        var selectedAnimal = this.value;
        fetchAndDisplayData('animal', selectedAnimal);
    });

    document.getElementById('cameraOptions').addEventListener('change', function() {
        var selectedCamera = this.value;
        fetchAndDisplayData('camera', selectedCamera);
    });

    document.getElementById('uploadForm').addEventListener('submit', function() {
        document.getElementById('spinner').style.display = 'block';
    });
});
</script>

</body>
</html>
#########
#########
##########
##############
#################
UPLOAD STYLING:
body, html {
            height: 100%;
            margin: 0;
            font-family: Arial, sans-serif;
            background: url("{{ url_for('static', filename='background.png') }}") no-repeat center center fixed;
            background-size: cover;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        .container {
            background-color: rgba(50, 50, 50, 0.8);
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            width: 90%;
            text-align: center;
            color: white;
            margin: 20px;
        }

        .upload-container, .graph-container {
            margin-bottom: 10px;
        }

        .graph-box {
            background-color: rgba(0, 0, 0, 0.6);
            border: 1px solid #444;
            border-radius: 8px;
            padding: 10px;
            width: 94%;
            height: 150px;
        }

        canvas {
            display: block;
            margin: 0 auto;
            max-width: 100%;
            max-height: 100%;
        }

        .top-bar, .bottom-bar {
            position: fixed;
            left: 0;
            width: 100%;
            height: 50px;
            background-color: #323232;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .top-bar {
            top: 0;
        }

        .bottom-bar {
            bottom: 0;
        }

        .title {
            color: white;
            font-size: 24px;
            margin: 0;
            text-align: center;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .nav-btn {
            background-color: #323232;
            color: white;
            border: none;
            cursor: pointer;
            padding: 10px;
            text-align: center;
            margin: 0 40px;
            border-radius: 50%;
        }

        .nav-btn:hover {
            background-color: #444;
        }

        .nav-btn img {
            width: 25px;
            height: 25px;
        }

        .sort-btn {
            background-color: #444;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 10px;
            cursor: pointer;
            margin-bottom: 10px;
        }

        .sort-btn:hover {
            background-color: #555;
        }

        .sort-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 10px;
        }

        .sort-container select {
            margin-left: 10px;
        }

        .btn-success {
            background-color: #228B22;
            color: white;
            border: 2px solid white;
            cursor: pointer;
            padding: 10px 20px;
            border-radius: 4px;
            text-align: center;
            margin-top: 15px;
        }

        .btn-success:hover {
            background-color: #196619;
        }

        .recommendation-box {
            background-color: rgba(50, 50, 50, 0.8);
            border-radius: 8px;
            padding: 20px;
            margin-top: 10px;
            color: white;
            width: 100%;
            box-sizing: border-box;
            white-space: pre-wrap;
        }

        .spinner {
            display: none;
            border: 8px solid #f3f3f3;
            border-top: 8px solid #444;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .drop-zone {
            border: 2px dashed #ddd;
            padding: 30px;
            border-radius: 8px;
            color: #ccc;
            text-align: center;
            margin-top: 20px;
            cursor: pointer;
            transition: border-color 0.2s;
        }

        .drop-zone.dragover {
            border-color: #007bff;
            color: #007bff;
        }

        /* Modal Styles */
        .modal {
            position: fixed;
            z-index: 1001;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: rgba(50, 50, 50, 0.8);
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            color: white;
            width: 90%;
            max-width: 500px;
        }

        .close-btn {
            color: white;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close-btn:hover {
            color: #ff0000;
        }

        .file-preview {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 10px;
        padding: 10px;
        background-color: rgba(75, 75, 75, 0.9);
        border-radius: 8px;
    }

    .file-preview img {
        max-width: 80px;
        max-height: 80px;
        border-radius: 4px;
        margin-right: 10px;
    }

    .file-preview-buttons {
        display: flex;
        gap: 10px;
    }

    .file-preview button {
        background-color: #444;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 5px 10px;
        cursor: pointer;
    }

    .file-preview button:hover {
        background-color: #555;
    }

    #confirmUpload {
        margin-top: 15px;
    }